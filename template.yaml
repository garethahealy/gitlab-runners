---
apiVersion: v1
kind: Template
metadata:
  name: gitlab-runner
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gitlab-runner
    labels:
      app: ukiconsulting-gitlab-runner
      chart: gitlab-runner-0.28.0
      release: "ukiconsulting"
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: ukiconsulting-gitlab-runner-edit
    labels:
      app: ukiconsulting-gitlab-runner
      chart: gitlab-runner-0.28.0
      release: "ukiconsulting"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: gitlab-runner
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ukiconsulting-gitlab-runner
    labels:
      app: ukiconsulting-gitlab-runner
      chart: gitlab-runner-0.28.0
      release: "ukiconsulting"
  data:
    entrypoint: |
      #!/bin/bash
      set -e
      mkdir -p /home/gitlab-runner/.gitlab-runner/
      cp /configmaps/config.toml /home/gitlab-runner/.gitlab-runner/

      # Set up environment variables for cache
      if [[ -f /secrets/accesskey && -f /secrets/secretkey ]]; then
        export CACHE_S3_ACCESS_KEY=$(cat /secrets/accesskey)
        export CACHE_S3_SECRET_KEY=$(cat /secrets/secretkey)
      fi

      if [[ -f /secrets/gcs-applicaton-credentials-file ]]; then
        export GOOGLE_APPLICATION_CREDENTIALS="/secrets/gcs-applicaton-credentials-file"
      elif [[ -f /secrets/gcs-application-credentials-file ]]; then
        export GOOGLE_APPLICATION_CREDENTIALS="/secrets/gcs-application-credentials-file"
      else
        if [[ -f /secrets/gcs-access-id && -f /secrets/gcs-private-key ]]; then
          export CACHE_GCS_ACCESS_ID=$(cat /secrets/gcs-access-id)
          # echo -e used to make private key multiline (in google json auth key private key is oneline with \n)
          export CACHE_GCS_PRIVATE_KEY=$(echo -e $(cat /secrets/gcs-private-key))
        fi
      fi

      if [[ -f /secrets/azure-account-name && -f /secrets/azure-account-key ]]; then
        export CACHE_AZURE_ACCOUNT_NAME=$(cat /secrets/azure-account-name)
        export CACHE_AZURE_ACCOUNT_KEY=$(cat /secrets/azure-account-key)
      fi

      if [[ -f /secrets/runner-registration-token ]]; then
        export REGISTRATION_TOKEN=$(cat /secrets/runner-registration-token)
      fi

      if [[ -f /secrets/runner-token ]]; then
        export CI_SERVER_TOKEN=$(cat /secrets/runner-token)
      fi

      # Register the runner
      if ! sh /configmaps/register-the-runner; then
        exit 1
      fi

      # Run pre-entrypoint-script
      if ! bash /configmaps/pre-entrypoint-script; then
        exit 1
      fi

      # Start the runner
      exec /entrypoint run --user=gitlab-runner
    config.toml: |
      concurrent = 10
      check_interval = 30
      log_level = "info"
      listen_address = ':9252'
    config.template.toml:   |
      [[runners]]
        builds_dir = "/tmp"
        environment = ["HOME=/tmp"]
        [runners.kubernetes]
          image = "ubuntu:16.04"
          cpu_limit = "1000m"
          helper_cpu_limit = "1000m"
    configure: |
      set -e
      cp /init-secrets/* /secrets
    register-the-runner: |
      #!/bin/bash
      MAX_REGISTER_ATTEMPTS=30

      for i in $(seq 1 "${MAX_REGISTER_ATTEMPTS}"); do
        echo "Registration attempt ${i} of ${MAX_REGISTER_ATTEMPTS}"
        /entrypoint register \
          --template-config /configmaps/config.template.toml \
          --non-interactive

        retval=$?

        if [ ${retval} = 0 ]; then
          break
        elif [ ${i} = ${MAX_REGISTER_ATTEMPTS} ]; then
          exit 1
        fi

        sleep 5
      done

      exit 0
    check-live: |
      #!/bin/bash
      if /usr/bin/pgrep -f .*register-the-runner; then
        exit 0
      elif /usr/bin/pgrep gitlab.*runner; then
        exit 0
      else
        exit 1
      fi
    pre-entrypoint-script: |
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ukiconsulting-gitlab-runner
    labels:
      app: ukiconsulting-gitlab-runner
      chart: gitlab-runner-0.28.0
      release: "ukiconsulting"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ukiconsulting-gitlab-runner
    template:
      metadata:
        labels:
          app: ukiconsulting-gitlab-runner
          chart: gitlab-runner-0.28.0
          release: "ukiconsulting"
        annotations:
          checksum/configmap: d4d6a2b5a484d300af54fabfc8fb4f3c1f8e07fbd9ab950599cfa494e11e68a7
          checksum/secrets: a66dd93e9e603a0b465d7e888f0f19c4767236996bfd579298e620c49784884c
          prometheus.io/scrape: 'true'
          prometheus.io/port: '9252'
      spec:
        terminationGracePeriodSeconds: 3600
        initContainers:
        - name: configure
          command: ['sh', '/configmaps/configure']
          image: ${IMAGE_REG}:latest
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
          env:
          - name: CI_SERVER_URL
            value: "https://gitlab.consulting.redhat.com/"
          - name: CLONE_URL
            value: ""
          - name: RUNNER_REQUEST_CONCURRENCY
            value: "1"
          - name: RUNNER_EXECUTOR
            value: "kubernetes"
          - name: REGISTER_LOCKED
            value: "true"
          - name: RUNNER_TAG_LIST
            value: ""
          - name: KUBERNETES_IMAGE
            value:
          - name: KUBERNETES_NAMESPACE
            value: "${PROJECT_NAME}"
          - name: KUBERNETES_CPU_LIMIT
            value: ""
          - name: KUBERNETES_CPU_LIMIT_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_MEMORY_LIMIT_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_CPU_REQUEST
            value: ""
          - name: KUBERNETES_CPU_REQUEST_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_MEMORY_REQUEST_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_SERVICE_ACCOUNT
            value: ""
          - name: KUBERNETES_SERVICE_CPU_LIMIT
            value: ""
          - name: KUBERNETES_SERVICE_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_SERVICE_CPU_REQUEST
            value: ""
          - name: KUBERNETES_SERVICE_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_CPU_LIMIT
            value: ""
          - name: KUBERNETES_HELPER_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_HELPER_CPU_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_IMAGE
            value: ""
          - name: KUBERNETES_PULL_POLICY
            value: ""
          volumeMounts:
          - name: runner-secrets
            mountPath: /secrets
            readOnly: false
          - name: configmaps
            mountPath: /configmaps
            readOnly: true
          - name: init-runner-secrets
            mountPath: /init-secrets
            readOnly: true
          resources:
            {}
        serviceAccountName: "gitlab-runner"
        containers:
        - name: ukiconsulting-gitlab-runner
          image: ${IMAGE_REG}:latest
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
          lifecycle:
            preStop:
              exec:
                command: ["/entrypoint", "unregister", "--all-runners"]
          command: ["/bin/bash", "/configmaps/entrypoint"]
          env:
          - name: HOME
            value: /home/gitlab-runner
          - name: CI_SERVER_URL
            value: "https://gitlab.consulting.redhat.com/"
          - name: CLONE_URL
            value: ""
          - name: RUNNER_REQUEST_CONCURRENCY
            value: "1"
          - name: RUNNER_EXECUTOR
            value: "kubernetes"
          - name: REGISTER_LOCKED
            value: "true"
          - name: RUNNER_TAG_LIST
            value: ""
          - name: KUBERNETES_IMAGE
            value:
          - name: KUBERNETES_NAMESPACE
            value: "${PROJECT_NAME}"
          - name: KUBERNETES_CPU_LIMIT
            value: ""
          - name: KUBERNETES_CPU_LIMIT_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_MEMORY_LIMIT_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_CPU_REQUEST
            value: ""
          - name: KUBERNETES_CPU_REQUEST_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_MEMORY_REQUEST_OVERWRITE_MAX_ALLOWED
            value: ""
          - name: KUBERNETES_SERVICE_ACCOUNT
            value: ""
          - name: KUBERNETES_SERVICE_CPU_LIMIT
            value: ""
          - name: KUBERNETES_SERVICE_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_SERVICE_CPU_REQUEST
            value: ""
          - name: KUBERNETES_SERVICE_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_CPU_LIMIT
            value: ""
          - name: KUBERNETES_HELPER_MEMORY_LIMIT
            value: ""
          - name: KUBERNETES_HELPER_CPU_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_MEMORY_REQUEST
            value: ""
          - name: KUBERNETES_HELPER_IMAGE
            value: ""
          - name: KUBERNETES_PULL_POLICY
            value: ""
          livenessProbe:
            exec:
              command: ["/bin/bash", "/configmaps/check-live"]
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["/usr/bin/pgrep","gitlab.*runner"]
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
          - name: metrics
            containerPort: 9252
          volumeMounts:
          - name: runner-secrets
            mountPath: /secrets
          - name: etc-gitlab-runner
            mountPath: /home/gitlab-runner/.gitlab-runner
          - name: configmaps
            mountPath: /configmaps
          resources:
            {}
        volumes:
        - name: runner-secrets
          emptyDir:
            medium: "Memory"
        - name: etc-gitlab-runner
          emptyDir:
            medium: "Memory"
        - name: init-runner-secrets
          projected:
            sources:
              - secret:
                  name: "ukiconsulting-gitlab-runner"
                  items:
                    - key: runner-registration-token
                      path: runner-registration-token
                    - key: runner-token
                      path: runner-token
        - name: configmaps
          configMap:
            name: ukiconsulting-gitlab-runner
parameters:
  - name: PROJECT_NAME
    required: true
  - name: IMAGE_REG
    required: true
